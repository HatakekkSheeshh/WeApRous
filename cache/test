python start_backend.py --server-ip 192.168.56.103 --server-port 9000


> GET /login.html HTTP/1.1
> Host: 192.168.1.12:8080
> User-Agent: curl/8.x.x
> Accept: */*


curl.exe -v -H "Host: app1.local:8080" http://192.168.1.12:8080/

header: Host: app1.local:8080





# ========== TASK 1: COOKIE SESSION AUTHENTICATION ==========
# Only apply cookie session for non-WeApRous requests (HTTP server)
"""
# Task 1A: Handle POST /login - Authentication
if req.method == 'POST' and req.path == '/login':
    # Parse POST body to extract username and password
    post_data = {}
    if '\r\n\r\n' in msg:
        body_part = msg.split('\r\n\r\n', 1)[1]
        for pair in body_part.split('&'):
            if '=' in pair:
                key, value = pair.split('=', 1)
                post_data[key] = value
    
    username = post_data.get('username', '')
    password = post_data.get('password', '')
    
    print("[HttpAdapter] Login attempt: username={}".format(username))
    
    # Validate credentials (username=admin, password=password)
    if username == 'admin' and password == 'password':
        # LOGIN SUCCESS - Serve index.html with Set-Cookie
        print("[HttpAdapter] Login successful")
        try:
            with open('www/index.html', 'rb') as f:
                content = f.read()
            
            response_header = (
                "HTTP/1.1 200 OK\r\n"
                "Content-Type: text/html\r\n"
                "Content-Length: {}\r\n"
                "Set-Cookie: auth=true; Path=/\r\n"
                "\r\n"
            ).format(len(content))
            
            response = response_header.encode() + content
            conn.sendall(response)
            conn.close()
            return
        except Exception as e:
            print("[HttpAdapter] Error reading index.html: {}".format(e))
    else:
        # LOGIN FAILED - Return 401 Unauthorized
        print("[HttpAdapter] Login failed - Invalid credentials")
        error_html = (
            "<html>"
            "<head><title>Login Failed</title></head>"
            "<body>"
            "<h1>401 Unauthorized</h1>"
            "<p>Invalid username or password</p>"
            "<p><a href='/login.html'>Try again</a></p>"
            "</body>"
            "</html>"
        )
        
        response = (
            "HTTP/1.1 401 Unauthorized\r\n"
            "Content-Type: text/html\r\n"
            "Content-Length: {}\r\n"
            "\r\n"
            "{}"
        ).format(len(error_html), error_html)
        
        conn.sendall(response.encode())
        conn.close()
        return

# Task 1B: Check cookie for protected pages (/ or /index.html)
if req.path in ['/', '/index.html']:
    cookies = getattr(req, 'cookies', {})
    
    if cookies.get('auth') != 'true':
        # NO VALID COOKIE - Return 401 Unauthorized
        print("[HttpAdapter] Access denied - No valid cookie")
        error_html = (
            "<html>"
            "<head><title>Unauthorized</title></head>"
            "<body>"
            "<h1>401 Unauthorized</h1>"
            "<p>Please <a href='/login.html'>login</a> first</p>"
            "</body>"
            "</html>"
        )
        
        response = (
            "HTTP/1.1 401 Unauthorized\r\n"
            "Content-Type: text/html\r\n"
            "Content-Length: {}\r\n"
            "\r\n"
            "{}"
        ).format(len(error_html), error_html)
        
        conn.sendall(response.encode())
        conn.close()
        return
    else:
        print("[HttpAdapter] Access granted - Valid cookie found")

# ========== END TASK 1 ==========
"""

http://192.168.1.12:8080/login.html